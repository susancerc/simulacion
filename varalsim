package com.mycompany.sim;
 import java.util.Random;

import java.util.Scanner;
public class Sim {


    // Algoritmo de Cuadrados Medios
    public static int[] cuadradosMedios(int seed, int n) {
        int[] numbers = new int[n];
        int X = seed;

        long startTime = System.nanoTime();
        for (int i = 0; i < n; i++) {
            int square = X * X;
            String squareStr = String.format("%08d", square); // Formatea con ceros adelante para garantizar 8 dígitos
            X = Integer.parseInt(squareStr.substring(2, 6));  // Extrae los dígitos centrales
            numbers[i] = X;
        }
        long endTime = System.nanoTime();
        
        System.out.println("Tiempo Algoritmo Cuadrados Medios: " + (endTime - startTime) / 1_000_000 + " ms");
        return numbers;
    }

    // Algoritmo Congruencial Lineal: Xn+1 = (a * Xn + c) % m
    public static int[] congruencialLineal(int seed, int a, int c, int m, int n) {
        int[] numbers = new int[n];
        int X = seed;

        long startTime = System.nanoTime();
        for (int i = 0; i < n; i++) {
            X = (a * X + c) % m;
            numbers[i] = X;
        }
        long endTime = System.nanoTime();
        
        System.out.println("Tiempo Algoritmo Congruencial Lineal: " + (endTime - startTime) / 1_000_000 + " ms");
        return numbers;
    }

    // Algoritmo Congruencial Cuadrático: Xn+1 = (a * Xn^2 + b * Xn + c) % m
    public static int[] congruencialCuadratico(int seed, int a, int b, int c, int m, int n) {
        int[] numbers = new int[n];
        int X = seed;

        long startTime = System.nanoTime();
        for (int i = 0; i < n; i++) {
            X = (a * X * X + b * X + c) % m;
            numbers[i] = X;
        }
        long endTime = System.nanoTime();
        
        System.out.println("Tiempo Algoritmo Congruencial Cuadrático: " + (endTime - startTime) / 1_000_000 + " ms");
        return numbers;
    }

    // Generador de Estudio de Medidas (usando Math.random() para mostrar valores aleatorios)
    public static double[] estudioDeMedidas(int n) {
        double[] numbers = new double[n];
        
        long startTime = System.nanoTime();
        for (int i = 0; i < n; i++) {
            numbers[i] = Math.random(); // Genera números entre 0 y 1
        }
        long endTime = System.nanoTime();
        
        System.out.println("Tiempo Generador de Estudio de Medidas: " + (endTime - startTime) / 1_000_000 + " ms");
        return numbers;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        boolean exit = false;

        while (!exit) {
            System.out.println("\nSeleccione el método que desea ejecutar:");
            System.out.println("1. Algoritmo de Cuadrados Medios");
            System.out.println("2. Algoritmo Congruencial Lineal");
            System.out.println("3. Algoritmo Congruencial Cuadrático");
            System.out.println("4. Estudio de Medidas (Math.random())");
            System.out.println("5. Salir");
            System.out.print("Opción: ");
            int option = scanner.nextInt();

            switch (option) {
                case 1:
                    // Algoritmo de Cuadrados Medios
                    System.out.print("Ingrese la semilla: ");
                    int seed = scanner.nextInt();
                    System.out.print("Ingrese la cantidad de números a generar (n): ");
                    int n = scanner.nextInt();
                    
                    System.out.println("\nAlgoritmo de Cuadrados Medios:");
                    int[] cuadradosMediosNums = cuadradosMedios(seed, n);
                    for (int num : cuadradosMediosNums) {
                        System.out.print(num + " ");
                    }
                    System.out.println("\n");
                    break;

                case 2:
                    // Algoritmo Congruencial Lineal
                    System.out.print("Ingrese la semilla: ");
                    seed = scanner.nextInt();
                    System.out.print("Ingrese el multiplicador (a): ");
                    int a = scanner.nextInt();
                    System.out.print("Ingrese la constante aditiva (c): ");
                    int c = scanner.nextInt();
                    System.out.print("Ingrese el módulo (m): ");
                    int m = scanner.nextInt();
                    System.out.print("Ingrese la cantidad de números a generar (n): ");
                    n = scanner.nextInt();

                    System.out.println("\nAlgoritmo Congruencial Lineal:");
                    int[] congruencialLinealNums = congruencialLineal(seed, a, c, m, n);
                    for (int num : congruencialLinealNums) {
                        System.out.print(num + " ");
                    }
                    System.out.println("\n");
                    break;

                case 3:
                    // Algoritmo Congruencial Cuadrático
                    System.out.print("Ingrese la semilla: ");
                    seed = scanner.nextInt();
                    System.out.print("Ingrese el multiplicador cuadrático (a): ");
                    a = scanner.nextInt();
                    System.out.print("Ingrese el multiplicador lineal (b): ");
                    int b = scanner.nextInt();
                    System.out.print("Ingrese la constante aditiva (c): ");
                    c = scanner.nextInt();
                    System.out.print("Ingrese el módulo (m): ");
                    m = scanner.nextInt();
                    System.out.print("Ingrese la cantidad de números a generar (n): ");
                    n = scanner.nextInt();

                    System.out.println("\nAlgoritmo Congruencial Cuadrático:");
                    int[] congruencialCuadraticoNums = congruencialCuadratico(seed, a, b, c, m, n);
                    for (int num : congruencialCuadraticoNums) {
                        System.out.print(num + " ");
                    }
                    System.out.println("\n");
                    break;

                case 4:
                    // Estudio de Medidas
                    System.out.print("Ingrese la cantidad de números a generar para el estudio de medidas: ");
                    n = scanner.nextInt();

                    System.out.println("\nEstudio de Medidas:");
                    double[] medidasNums = estudioDeMedidas(n);
                    for (double num : medidasNums) {
                        System.out.printf("%.4f ", num);
                    }
                    System.out.println();
                    break;

                case 5:
                    // Salir
                    exit = true;
                    System.out.println("Saliendo del programa...");
                    break;

                default:
                    System.out.println("Opción no válida. Por favor, seleccione una opción válida.");
            }
        }

        scanner.close();
    }
}
